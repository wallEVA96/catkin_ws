#robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
#footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular
footprint: [[0.2, 0.2], [-0.2, 0.2], [-0.2, -0.2], [0.2, -0.2]]
map_type: costmap #voxel/costmap , 指定代价地图显示的类型。
plugins:
     - {name: static_layer,            type: "costmap_2d::StaticLayer"}
    #- {name: obstacle_layer,          type: "costmap_2d::VoxelLayer"}
     - {name: obstacle_layer,          type: "costmap_2d::ObstacleLayer"}
     - {name: inflation_layer,         type: "costmap_2d::InflationLayer"}

static_layer:
    enabled:            true

obstacle_layer: #http://wiki.ros.org/costmap_2d/hydro/obstacles
    enabled:              true
    # Config Voxel Layer
    max_obstacle_height:  0.25
    origin_z:             0.25
    z_resolution:         0.2
    z_voxels:             1
    unknown_threshold:    10
    mark_threshold:       0
    publish_voxel_map: true
    # Config Obstacle Layer
    footprint_clearing_enabled: true
    track_unknown_space:  true    #true needed for disabling global path planning through unknown space
    combination_method:   1
    obstacle_range: 4
    raytrace_range: 5
    observation_sources:  scan bump
    scan:
      data_type: LaserScan
      topic: scan
      marking: true
      clearing: true
      inf_is_valid: true
      obstacle_range: 3
      raytrace_range: 6
      min_obstacle_height: 0.0
      max_obstacle_height: 2.0
    bump:
      data_type: PointCloud2
      topic: mobile_base/sensors/bumper_pointcloud
      marking: true
      clearing: false
      min_obstacle_height: 0.0
      max_obstacle_height: 0.15

inflation_layer:
    enabled:              true
    cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)
    inflation_radius:     0.5  # max. distance from an obstacle at which costs are incurred for planning paths.

